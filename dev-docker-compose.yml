version: "3.8"

services:
  traefik:
    image: traefik:v2.4
    command: --api.insecure=true
      --providers.docker
      --entrypoints.web.address=:80
      --entrypoints.websecure.address=:443
      --entrypoints.web.http.redirections.entryPoint.to=websecure
      --entrypoints.web.http.redirections.entryPoint.scheme=https
      --certificatesresolvers.letsencrypt.acme.email=dannii.popova@gmail.com
      --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme-store:/etc/traefik/acme
    networks:
      - todanni

  postgresql:
    image: postgres
    container_name: postgres-db
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - todanni
    ports:
      - "127.0.0.1:5432:5432"

  vault: 
    image: vault
    container_name: vault
    volumes:
      - ./file:/vault/file:rw
      - ./config:/vault/config:rw
    cap_add:
      - IPC_LOCK
    networks:
      - todanni
    command: vault server -config=/vault/config/vault.json
    labels: 
      - traefik.http.routers.vault.rule=Host(`dev-vault.todanni.com`)
      - traefik.http.routers.vault.tls=true
      - traefik.http.routers.vault.tls.certresolver=letsencrypt

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=docker
      - RABBITMQ_DEFAULT_PASS=docker
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - todanni

volumes:
  postgres-data:

networks:
  todanni:
    name: todanni
